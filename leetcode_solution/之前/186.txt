186. Reverse Words in a String II

问题难度: ? ? ?

问题描述

给定一个输入字符串, 逐个单词逐个单词翻转字符串.

示例

Input:  ["t","h","e"," ","s","k","y"," ","i","s"," ","b","l","u","e"]
Output: ["b","l","u","e"," ","i","s"," ","s","k","y"," ","t","h","e"]
注意

一个单词的定义为: 一个非空字符串的序列
输入字符串前后不包含空字符串
单词之间一般用""分隔
延伸:  尝试在O(1)的空间复杂度内就地解决这个问题.

解题思路

和之前第158题的想法类似, 甚至比之前更简单, 因为不用考虑多余的空格问题. 首先将整个字符串旋转, 再将逐个单词进行旋转.

代码

class Solution(object):
    def reverseWords(self, s):
        """
        :type s: a list of 1 length strings (List[str])
        :rtype: nothing
        """
        def reverse(s, i, j):
            # 将s从i到j的元素进行对调
            while i < j:
                s[i], s[j] = s[j], s[i]
                i += 1
                j -= 1
        reverse(s, 0, len(s)-1)
        # 然后遍历, 找到每个单词的起始位置和终止位置
        start_idx, end_idx = 0, 0
        for i in range(1, len(s)):
            while i < len(s) and s[i] != " ":
                i += 1
            end_idx = i - 1
            reverse(s, start_idx, end_idx)
            start_idx = i + 1
sl = Solution()
s = ["t","h","e"," ","s","k","y"," ","i","s"," ","b","l","u","e"]
sl.reverseWords(s)
print(s)
['b', 'l', 'u', 'e', ' ', 'i', 's', ' ', 's', 'k', 'y', ' ', 't', 'h', 'e']