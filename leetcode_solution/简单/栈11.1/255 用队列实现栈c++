// q.front(); //队列首元素
// q.pop();  //删除队首
// q.empty();
// q.push(x);
class MyStack {
public:
    /** Initialize your data structure here. */
    MyStack() {
        
    }
    
    /** Push element x onto stack. */
    void push(int x) {
        queue<int> temp; //建立一个辅助队列
        while(q.empty() == false){ //将队列q中所有元素存入辅助队列中
            temp.push(q.front());
            q.pop();
        }
        q.push(x); //向队列中压入元素，放在队首
        while(temp.empty() == false){ //逐个将辅助队列中的元素送回队列q中
            q.push(temp.front());
            temp.pop();
        }
    }
    
    /** Removes the element on top of the stack and returns that element. */
    int pop() {
        int a = q.front(); //将队列首元素返回
        q.pop();  //删除队首
        return a;
    }
    
    /** Get the top element. */
    int top() {
        return q.front();  //返回队首
    }
    
    /** Returns whether the stack is empty. */
    bool empty() {
        return q.empty();
    }
private:
    queue<int> q;
};

